apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.anshdeep.newsly"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 3
        versionName "1.02"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "NEWS_API_KEY", NEWS_API_KEY)
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'

    // Essential Support libraries
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'


    // Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"

    // Android KTX
    implementation "androidx.core:core-ktx:1.6.0"

    // Coroutines for getting off the UI thread
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"

    // Use viewModelScope from lifecycle-viewmodel-ktx
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0-alpha02"

    // Moshi for parsing the JSON format
    implementation "com.squareup.moshi:moshi:1.10.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.10.0"

    // Dagger
    implementation "com.google.dagger:dagger:2.16"
    implementation "com.google.dagger:dagger-android:2.16"
    implementation "com.google.dagger:dagger-android-support:2.16"
    kapt "com.google.dagger:dagger-compiler:2.16"
    kapt "com.google.dagger:dagger-android-processor:2.16"


    // Utilities for effectively testing Coroutines.
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"

    // Test
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"

    // Room database
    implementation "androidx.room:room-runtime:2.3.0"
    implementation "androidx.room:room-ktx:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:2.0.1"

    // Assisted injection for dagger 2
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.4.0'
    annotationProcessor 'com.squareup.inject:assisted-inject-processor-dagger2:0.4.0'

    // Chrome custom tabs
    implementation 'androidx.browser:browser:1.3.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
}
